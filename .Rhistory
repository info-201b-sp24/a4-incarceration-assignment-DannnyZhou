library("dplyr")
library("ggplot2")
install.packages("ggplot2")
library("ggplot2")
remove.packages("ggplot2")
install.packages("ggplot2")
library("ggplot2")
library("plotly")
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
str(prison_pop)
head(prison_pop)
plot_data <- prison_pop %>%
filter(
state == "State",
year > 2000
) %>%
select(state, year, total_prison_pop)
prison_plot <- ggplot(plot_data) +
geom_col(
mapping = aes(x = year, y = total_prison_pop, fill = state),
position = "dodge"
)
ggplotly(prison_plot)
p <- plot_ly(
data = plot_data,
x = ~year,
y = ~total_prison_pop,
color = ~state,
type="bar"
)
p <- p %>% layout(
title = "Total Prison Population in US States (2001-2016)",
xaxis = list(title = "Years"),
yaxis = list(title = "Total Prison Population")
)
P
library("dplyr")
library("ggplot2")
library("plotly")
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
str(prison_pop)
head(prison_pop)
plot_data <- prison_pop %>%
filter(!is.na(total_prison_pop), year > 2000) %>%
group_by(state, year) %>%
summarise(total_prison_pop = sum(total_prison_pop, na.rm = TRUE)) %>%
ungroup()
prison_plot <- ggplot(plot_data) +
geom_col(
mapping = aes(x = year, y = total_prison_pop, fill = state),
position = "dodge"
)
ggplotly(prison_plot)
p <- plot_ly(
data = plot_data,
x = ~year,
y = ~total_prison_pop,
color = ~state,
type="bar"
)
p <- p %>% layout(
title = "Total Prison Population in US States (2001-2016)",
xaxis = list(title = "Years"),
yaxis = list(title = "Total Prison Population")
)
P
# Average value of the variable across all states in the current year
avg_current_year <- plot_data %>%
filter(year == current_year) %>%
summarise(average_prison_pop = mean(total_prison_pop, na.rm = TRUE))
# Average value of the variable across all states in the current year
avg_current_year <- plot_data %>%
filter(year == current_year) %>%
summarise(average_prison_pop = mean(total_prison_pop, na.rm = TRUE))
# Calculate summary statistics
current_year <- max(plot_data$year)
# Average value of the variable across all states in the current year
avg_current_year <- plot_data %>%
filter(year == current_year) %>%
summarise(average_prison_pop = mean(total_prison_pop, na.rm = TRUE))
print(avg_current_year)
# State with the highest value in the current year
highest_current_year <- plot_data %>%
filter(year == current_year) %>%
top_n(1, total_prison_pop)
print(highest_current_year)
# State with the lowest value in the current year
lowest_current_year <- plot_data %>%
filter(year == current_year) %>%
top_n(-1, total_prison_pop)
print(lowest_current_year)
# Change in the variable over the last N years (e.g., 10 years)
n_years <- 10
start_year <- current_year - n_years
change_over_years <- plot_data %>%
filter(year %in% c(start_year, current_year)) %>%
group_by(state) %>%
summarise(change = total_prison_pop[year == current_year] - total_prison_pop[year == start_year], .groups = "drop")
print(change_over_years)
change_over_years <- plot_data %>%
filter(year %in% c(start_year, current_year)) %>%
group_by(state) %>%
reframe(change = total_prison_pop[year == current_year] - total_prison_pop[year == start_year])
print(change_over_years)
# Calculate the overall change
total_change_over_years <- change_over_years %>%
summarise(total_change = sum(change, na.rm = TRUE))
print(total_change_over_years)
library("dplyr")
library("ggplot2")
library("plotly")
# Load the data
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
# Check the structure and the first few rows of the dataset
str(prison_pop)
head(prison_pop)
# Filter and select the data
plot_data <- prison_pop %>%
filter(!is.na(total_prison_pop), !is.na(total_pop), year > 2000) %>%
group_by(state, year) %>%
summarise(
total_prison_pop = sum(total_prison_pop, na.rm = TRUE),
total_pop = sum(total_pop, na.rm = TRUE),
.groups = "drop"
)
# Create a scatter plot using ggplot2
comparison_plot <- ggplot(plot_data) +
geom_point(mapping = aes(x = total_pop, y = total_prison_pop, color = state)) +
labs(
title = "Total Prison Population vs Total Population in US States (2001-2016)",
x = "Total Population",
y = "Total Prison Population",
color = "State"
) +
theme_minimal()
# Make the plot interactive using ggplotly
ggplotly(comparison_plot)
# Make the plot interactive using ggplotly
interactive_plot <- ggplotly(comparison_plot) %>%
layout(
title = "Total Prison Population vs. Total Population in US States (2001-2016)",
xaxis = list(title = "Total Population"),
yaxis = list(title = "Total Prison Population"),
legend = list(title = list(text = "State"))
)
# Display the plot
interactive_plot
# Make the plot interactive using ggplotly
ggplotly(comparison_plot)
install.packages("sf")
install.packages("tmap")
library("sf")
library("tmap")
# Load the data
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
# Check the structure and the first few rows of the dataset
str(prison_pop)
head(prison_pop)
# Filter and summarize the data
map_data <- prison_pop %>%
filter(!is.na(total_prison_pop), year > 2000) %>%
group_by(state) %>%
summarise(avg_prison_pop = mean(total_prison_pop, na.rm = TRUE), .groups = "drop")
# Load US states shapefile
us_states <- st_read("path/to/shapefile/US_states.shp")
# Merge map data with shapefile data
map_data <- merge(us_states, map_data, by.x = "state_abbr", by.y = "state")
# Create a map using tmap
tm_shape(map_data) +
tm_polygons("avg_prison_pop", title = "Average Prison Population") +
tm_layout(title = "Average Prison Population by State (2001-2016)")
install.packages("tigris")
library("tigris")
library("sf")
library("tmap")
# Load the data
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
# Check the structure and the first few rows of the dataset
str(prison_pop)
head(prison_pop)
# Filter and summarize the data
map_data <- prison_pop %>%
filter(!is.na(total_prison_pop), year > 2000) %>%
group_by(state) %>%
summarise(avg_prison_pop = mean(total_prison_pop, na.rm = TRUE), .groups = "drop")
# Load US states shapefile
us_states <- states(cb = TRUE)
str(us_states)
head(us_states)
# Merge map data with shapefile data
map_data <- merge(us_states, map_data, by.x = "STUSPS" by.y = "state")
library("dplyr")
library("ggplot2")
library("tigris")
library("sf")
library("tmap")
# Load the data
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
# Check the structure and the first few rows of the dataset
str(prison_pop)
head(prison_pop)
# Filter and summarize the data
map_data <- prison_pop %>%
filter(!is.na(total_prison_pop), year > 2000) %>%
group_by(state) %>%
summarise(avg_prison_pop = mean(total_prison_pop, na.rm = TRUE), .groups = "drop")
# Load US states shapefile
us_states <- states(cb = TRUE)
str(us_states)
head(us_states)
# Merge map data with shapefile data
map_data <- merge(us_states, map_data, by.x = "STUSPS", by.y = "state")
# Create a map using tmap
tm_shape(map_data) +
tm_polygons("avg_prison_pop", title = "Average Prison Population") +
tm_layout(title = "Average Prison Population by State (2001-2016)")
# Create a map using tmap
tm_shape(map_data) +
tm_polygons("avg_prison_pop", title = "Average Prison Population") +
tm_layout(title = "Average Prison Population by State (2001-2016)")
# Create a map using tmap
tm_shape(map_data) +
tm_polygons("avg_prison_pop", title = "Average Prison Population") +
tm_layout(title = "Average Prison Population by State (2001-2016)")
# Create a map using tmap
tm_shape(map_data) +
tm_polygons("avg_prison_pop", title = "Average Prison Population") +
tm_layout(title = "Average Prison Population by State (2001-2016)")
# Create a map using tmap
tm_shape(map_data) +
tm_polygons("avg_prison_pop", title = "Average Prison Population") +
tm_layout(title = "Average Prison Population by State (2001-2016)")
library("dplyr")
library("ggplot2")
library("plotly")
# Load the data
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
# Check the structure and the first few rows of the dataset
str(prison_pop)
head(prison_pop)
# Filter and select the data
plot_data <- prison_pop %>%
filter(!is.na(total_prison_pop), year > 2000) %>%
group_by(state, year) %>%
summarise(total_prison_pop = sum(total_prison_pop, na.rm = TRUE)) %>%
ungroup()
# Calculate summary statistics
current_year <- max(plot_data$year)
# Average value of the variable across all states in the current year
avg_current_year <- plot_data %>%
filter(year == current_year) %>%
summarise(average_prison_pop = mean(total_prison_pop, na.rm = TRUE))
# State with the highest value in the current year
highest_current_year <- plot_data %>%
filter(year == current_year) %>%
top_n(1, total_prison_pop)
# State with the lowest value in the current year
lowest_current_year <- plot_data %>%
filter(year == current_year) %>%
top_n(-1, total_prison_pop)
# Change in the variable over the last N years (e.g., 10 years)
n_years <- 10
start_year <- current_year - n_years
change_over_years <- plot_data %>%
filter(year %in% c(start_year, current_year)) %>%
group_by(state) %>%
reframe(change = total_prison_pop[year == current_year] - total_prison_pop[year == start_year])
# Calculate the overall change
total_change_over_years <- change_over_years %>%
summarise(total_change = sum(change, na.rm = TRUE))
# Extract summary values
avg_value <- avg_current_year$average_prison_pop
highest_state <- highest_current_year$state
highest_value <- highest_current_year$total_prison_pop
lowest_state <- lowest_current_year$state
lowest_value <- lowest_current_year$total_prison_pop
total_change <- total_change_over_years$total_change
# Create a grouped bar chart using ggplot2
prison_plot <- ggplot(plot_data) +
geom_col(
mapping = aes(x = year, y = total_prison_pop, fill = state),
position = "dodge"
)
# Create a grouped bar chart using ggplot2
prison_plot <- ggplot(plot_data) +
geom_col(
mapping = aes(x = year, y = total_prison_pop, fill = state),
position = "dodge"
)
# Make the plot interactive using ggplotly
ggplotly(prison_plot)
# Alternatively, create the same plot using plotly directly
p <- plot_ly(
data = plot_data,
x = ~year,
y = ~total_prison_pop,
color = ~state,
type="bar"
)
# Add layout to make the plot more presentable
p <- p %>% layout(
title = "Total Prison Population in US States (2001-2016)",
xaxis = list(title = "Years"),
yaxis = list(title = "Total Prison Population")
)
source("Trends_Over_Time_Chart.R")
source("Variable_Comparison_Chart.R")
source("Trends_Over_Time_Chart.R")
source("Variable_Comparison_Chart.R")
source("Variable_Comparison_Chart.R")
source("Trends_Over_Time_Chart.R")
source("Variable_Comparison_Chart.R")
source("Trends_Over_Time_Chart.R")
source("Variable_Comparison_Chart.R")
library("dplyr")
library("ggplot2")
library("tigris")
library("sf")
library("tmap")
# Load the data
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
# Check the structure and the first few rows of the dataset
str(prison_pop)
head(prison_pop)
# Filter and summarize the data
map_data <- prison_pop %>%
filter(!is.na(total_prison_pop), year > 2000) %>%
group_by(state) %>%
summarise(avg_prison_pop = mean(total_prison_pop, na.rm = TRUE), .groups = "drop")
# Load US states shapefile
us_states <- states(cb = TRUE)
# Check the structure and the first few rows of the shapefile data
str(us_states)
head(us_states)
# Merge map data with shapefile data
map_data <- merge(us_states, map_data, by.x = "STUSPS", by.y = "state")
# Create a map using tmap
tm_shape(map_data) +
tm_polygons("avg_prison_pop", title = "Average Prison Population") +
tm_layout(
title = "Average Prison Population by State (2001-2016)",
frame = FALSE,
legend.outside = TRUE
)
```r
library("dplyr")
library("ggplot2")
library("tigris")
library("sf")
library("tmap")
# Load the data
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
# Filter and summarize the data
map_data <- prison_pop %>%
filter(!is.na(total_prison_pop), year > 2000) %>%
group_by(state) %>%
summarise(avg_prison_pop = mean(total_prison_pop, na.rm = TRUE), .groups = "drop")
# Load US states shapefile
us_states <- states(cb = TRUE)
# Merge map data with shapefile data
map_data <- merge(us_states, map_data, by.x = "STUSPS", by.y = "state")
# Create a map using tmap
tm_shape(map_data) +
tm_polygons("avg_prison_pop", title = "Average Prison Population") +
tm_layout(
title = "Average Prison Population by State (2001-2016)",
frame = FALSE,
legend.outside = TRUE
)
library("dplyr")
library("ggplot2")
library("plotly")
# Load the data
prison_pop <- read.csv(
file = "https://github.com/melaniewalsh/Neat-Datasets/blob/main/us-prison-pop.csv?raw=true",
stringsAsFactors = FALSE
)
# Filter and select the data
plot_data <- prison_pop %>%
filter(!is.na(total_prison_pop), !is.na(total_pop), year > 2000) %>%
group_by(state, year) %>%
summarise(
total_prison_pop = sum(total_prison_pop, na.rm = TRUE),
total_pop = sum(total_pop, na.rm = TRUE),
.groups = "drop"
)
# Create a scatter plot using ggplot2
comparison_plot <- ggplot(plot_data) +
geom_point(mapping = aes(x = total_pop, y = total_prison_pop, color = state)) +
labs(
title = "Total Prison Population vs Total Population in US States (2001-2016)",
x = "Total Population",
y = "Total Prison Population",
color = "State"
) +
theme_minimal()
# Make the plot interactive using ggplotly
ggplotly(comparison_plot)
source("Trends_Over_Time_Chart.R")
